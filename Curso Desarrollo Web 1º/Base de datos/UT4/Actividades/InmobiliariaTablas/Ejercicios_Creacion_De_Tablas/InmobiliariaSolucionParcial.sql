-- 2. Genera la siguiente tabla:

CREATE TABLE INMOBILIARIA (
 ID_INMOBILIARIA NUMBER NOT NULL,
 NOMBRE VARCHAR2(30) NOT NULL,
 CIUDAD VARCHAR2(100) NOT NULL,
 TELEFONO VARCHAR2(15) NOT NULL,
 CONSTRAINT PK_INMOBILIARIA PRIMARY KEY (ID_INMOBILIARIA)
);

COMMENT ON TABLE INMOBILIARIA IS 'Datos de las inmobiliarias';
COMMENT ON COLUMN INMOBILIARIA.ID_INMOBILIARIA IS 'Identificador de la inmobiliaria';
COMMENT ON COLUMN INMOBILIARIA.NOMBRE IS 'Nombre de la inmobiliaria';
COMMENT ON COLUMN INMOBILIARIA.CIUDAD IS 'Ciudad donde se encuentra la inmobiliaria';
COMMENT ON COLUMN INMOBILIARIA.TELEFONO IS 'Telefono de la inmobiliaria';

CREATE SEQUENCE SEC_INMOBILIARIA
INCREMENT BY 1
START WITH 1
MAXVALUE 999999999
NOCACHE
ORDER;

-- 3. Realiza las siguientes modificaciones de estructura en la base de datos:

ALTER TABLE AGENTE 
	MODIFY NOMBRE VARCHAR2(100);
ALTER TABLE AGENTE 	
	MODIFY EMAIL VARCHAR2(100) NOT NULL;
ALTER TABLE AGENTE	
	ADD ID_INMOBILIARIA NUMBER;
ALTER TABLE AGENTE	
	ADD CONSTRAINT FK_AGENTE_ID_INMOBILIARIA FOREIGN KEY(ID_INMOBILIARIA) REFERENCES INMOBILIARIA(ID_INMOBILIARIA);

COMMENT ON COLUMN AGENTE.ID_INMOBILIARIA IS 'Inmobiliaria del agente';

-- 4. Introduce los siguientes datos en cada tabla:

INSERT INTO INMOBILIARIA (ID_INMOBILIARIA, NOMBRE, CIUDAD, TELEFONO) 
VALUES (SEC_INMOBILIARIA.NEXTVAL, 'La Mayor','Madrid','900110220');
INSERT INTO INMOBILIARIA (ID_INMOBILIARIA, NOMBRE, CIUDAD, TELEFONO) 
VALUES (SEC_INMOBILIARIA.NEXTVAL, 'Doncel','Ciudad Real','926217240');
INSERT INTO INMOBILIARIA (ID_INMOBILIARIA, NOMBRE, CIUDAD, TELEFONO) 
VALUES (SEC_INMOBILIARIA.NEXTVAL, 'Correal','Toledo','902102020');
INSERT INTO INMOBILIARIA (ID_INMOBILIARIA, NOMBRE, CIUDAD, TELEFONO) 
VALUES (SEC_INMOBILIARIA.NEXTVAL, 'Cepeda','Albacete','900213040');
INSERT INTO INMOBILIARIA (ID_INMOBILIARIA, NOMBRE, CIUDAD, TELEFONO) 
VALUES (SEC_INMOBILIARIA.NEXTVAL, 'Concasa','Mérida','903754896');

COMMIT;

-- 6. Genera las siguientes consultas:

-- a) Obtener todos los datos de los inmuebles, incluida la descripción del tipo de inmueble

-- WHERE
SELECT I.ID_INMUEBLE, 
	   I.DIRECCION, 
	   I.POBLACION, 
	   I.CODIGO_POSTAL, 
	   I.PRECIO_VENTA, 
	   I.PRECIO_ALQUILER, 
	   I.FECHA_ULTIMO_MOV, 
	   I.OBSERVACIONES, 
	   I.CODIGO_TIPO_INMUEBLE, 
	   TI.DESCRIPCION AS "DESCRIPCION_TIPO_INMUEBLE"
FROM INMUEBLE I, TIPO_INMUEBLE TI
WHERE I.CODIGO_TIPO_INMUEBLE = TI.CODIGO_TIPO_INMUEBLE;

-- JOIN
SELECT I.ID_INMUEBLE, 
	   I.DIRECCION, 
	   I.POBLACION, 
	   I.CODIGO_POSTAL, 
	   I.PRECIO_VENTA, 
	   I.PRECIO_ALQUILER, 
	   I.FECHA_ULTIMO_MOV, 
	   I.OBSERVACIONES, 
	   I.CODIGO_TIPO_INMUEBLE, 
	   TI.DESCRIPCION AS DESCRIPCION_TIPO_INMUEBLE
FROM INMUEBLE I INNER JOIN TIPO_INMUEBLE TI 
	ON I.CODIGO_TIPO_INMUEBLE = TI.CODIGO_TIPO_INMUEBLE;

-- b) Obtener el DNI, NOMBRE, APELLIDOS de los Agentes, así como la DESCRIPCIÓN del horario de cada Agente.
SELECT A.DNI, 
	   A.NOMBRE, 
	   A.APELLIDOS, 
	   H.DESCRIPCION AS HORARIO
FROM AGENTE A INNER JOIN HORARIO H 
	ON A.HORARIO_CODIGO = H.CODIGO;

-- c) Lista las comisiones obtenidas por cada Agente, devuelve DNI, NOMBRE, TELEFONO, SALARIO BASE de los Agentes, así como el IMPORTE y FECHA_CALCULO de cada comisión de los Agentes.
SELECT A.DNI, 
	   A.NOMBRE, 
	   A.TELEFONO, 
	   A.SALARIO_BASE, 
	   C.IMPORTE, 
	   C.FECHA_CALCULO
FROM AGENTE A
INNER JOIN COMISION C ON A.DNI = C.AGENTE_DNI;

-- d) Devuelve el número de comisiones obtenidas por cada Agente en función del DNI del Agente.
SELECT AGENTE_DNI, 
	   COUNT(*) AS NUMERO_COMISIONES
FROM COMISION 
GROUP BY AGENTE_DNI;

-- e) Devuelve el IMPORTE de la comisión más grande obtenida por aquellos Agentes con más de 2 comisiones. De los Agentes, solo es necesario devolver el DNI del Agente.
SELECT AGENTE_DNI, 
	   MAX(IMPORTE) AS COMISION_MAX
FROM COMISION 
GROUP BY AGENTE_DNI
HAVING COUNT(*) > 2;

-- f) Devuelve el ID_MOVIMIENTO, FECHA_MOVIMIENTO, PRECIO, ID_INMUEBLE, de todos los movimientos del Agente cuyo DNI es 05784218V, incluida la DIRECCION y POBLACION del Inmueble del movimiento, y DESCRIPCION del 
-- Tipo de Inmueble, DESCRIPCION del Tipo de Movimiento, DNI y NOMBRE y APELLIDOS del Cliente, así como DNI, NOMBRE y APELLIDOS del Agente correspondiente.
SELECT M.ID_MOVIMIENTO, 
	   M.FECHA_MOVIMIENTO, 
	   M.PRECIO, 
	   M.ID_INMUEBLE, 
	   I.DIRECCION, 
	   I.POBLACION, 
	   TI.DESCRIPCION AS TIPO_INMUEBLE, 
	   TM.DESCRIPCION AS TIPO_MOVIMIENTO, 
	   C.DNI AS DNI_CLIENTE,
	   C.NOMBRE AS NOMBRE_CLIENTE, 
	   C.APELLIDOS AS APELLIDOS_CLIENTE, 
	   A.DNI AS DNI_AGENTE, 
	   A.NOMBRE AS NOMBRE_AGENTE, 
	   A.APELLIDOS AS APELLIDOS_CLIENTE 
FROM MOVIMIENTO M INNER JOIN AGENTE A 
	 			  		ON M.AGENTE_DNI = A.DNI 
	 			  INNER JOIN INMUEBLE I 
						ON M.ID_INMUEBLE = I.ID_INMUEBLE
				  INNER JOIN TIPO_INMUEBLE TI 
						ON I.CODIGO_TIPO_INMUEBLE = TI.CODIGO_TIPO_INMUEBLE 
				  INNER JOIN TIPO_MOVIMIENTO TM 
						ON M.CODIGO_TIPO_MOVIMIENTO = TM.CODIGO_TIPO_MOVIMIENTO
				  INNER JOIN CLIENTE C 
						ON M.CLIENTE_DNI = C.DNI 
WHERE A.DNI='05784218V';

-- g) Obtener toda la información de los inmuebles cuyo estado tenga por descripción ‘Venta’.
SELECT I.*
FROM INMUEBLE I INNER JOIN INMUEBLE_ESTADO IE 
						ON I.ID_INMUEBLE = IE.ID_INMUEBLE 
				INNER JOIN ESTADO E 
						ON IE.CODIGO_ESTADO = E.CODIGO_ESTADO
WHERE E.DESCRIPCION = 'Venta';

-- h) Obtener todos los datos de los agentes cuyo salario base está entre 1200 y 3100.
SELECT *
FROM AGENTE 
WHERE SALARIO_BASE BETWEEN 1200 AND 3100;

-- i) Obtener el ID_MOVIMIENTO, FECHA_MOVIMIENTO, PRECIO del Cliente con número de teléfono 926213040, siempre que sean movimientos realizados en el año 2020.
SELECT M.ID_MOVIMIENTO, 
	   M.FECHA_MOVIMIENTO, 
	   M.PRECIO 
FROM MOVIMIENTO M INNER JOIN CLIENTE C 
					 	ON M.CLIENTE_DNI = C.DNI
WHERE C.TELEFONO = '926213040' 
	  AND TO_CHAR(M.FECHA_MOVIMIENTO, 'YYYY') = '2020';

-- j) Obtener el precio medio de venta de todos los inmuebles sobre los que se hayan realizado algún movimiento.
SELECT AVG(I.PRECIO_VENTA) AS PRECIO_MEDIO
FROM INMUEBLE I INNER JOIN MOVIMIENTO M 
				   		 	ON I.ID_INMUEBLE = M.ID_INMUEBLE;

